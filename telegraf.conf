
[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "1s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "s"
  hostname = "telegrafCollector"
  omit_hostname = false
  
[[outputs.influxdb]]
  urls = ["http://${INFLUX_IP}:${INFLUX_PORT}"]
  database = "default"
  username = "${INFLUX_WRITE_USERNAME}"
  password = "${INFLUX_WRITE_PASSWORD}"
  [outputs.influxdb.tagdrop] #Drop dont pass any data that has the tag influx_database_output
    influx_database_output = ["*"]

#DOCKER
[[outputs.influxdb]]
  urls = ["http://${INFLUX_IP}:${INFLUX_PORT}"]
  database = "docker"
  username = "${INFLUX_WRITE_USERNAME}"
  password = "${INFLUX_WRITE_PASSWORD}"
  [outputs.influxdb.tagpass]
    influx_database_output = ["docker"]
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  [inputs.docker.tags]
    influx_database_output = "docker"

#INFLUX
[[outputs.influxdb]]
  urls = ["http://${INFLUX_IP}:${INFLUX_PORT}"]
  database = "influx"
  username = "${INFLUX_WRITE_USERNAME}"
  password = "${INFLUX_WRITE_PASSWORD}"
  [outputs.influxdb.tagpass]
    influx_database_output = ["influx"]
[[inputs.influxdb]]
  urls = [
    "http://${INFLUX_IP}:${INFLUX_PORT}/debug/vars"
  ]
  username = "${INFLUX_READ_USERNAME}"
  password = "${INFLUX_READ_PASSWORD}"
  [inputs.influxdb.tags]
    influx_database_output = "influx"

#IPMI
[[outputs.influxdb]]
  urls = ["http://${INFLUX_IP}:${INFLUX_PORT}"]
  database = "ipmi"
  username = "${INFLUX_WRITE_USERNAME}"
  password = "${INFLUX_WRITE_PASSWORD}"
  [outputs.influxdb.tagpass]
    influx_database_output = ["ipmi"]
[[inputs.ipmi_sensor]]
  servers = [
    "${IPMI_USERNAME}:${IPMI_PASSWORD}@lanplus(192.168.100.22)"
  ]
  metric_version = 2
  [inputs.ipmi_sensor.tags]
    influx_database_output = "ipmi"

#REDIS
[[outputs.influxdb]]
  urls = ["http://${INFLUX_IP}:${INFLUX_PORT}"]
  database = "redis"
  username = "${INFLUX_WRITE_USERNAME}"
  password = "${INFLUX_WRITE_PASSWORD}"
  [outputs.influxdb.tagpass]
    influx_database_output = ["redis"]
[[inputs.redis]]
  servers = ["tcp://192.168.100.160:6379"]
  [inputs.redis.tags]
    influx_database_output = "redis"

#POSTGRES
[[outputs.influxdb]]
  urls = ["http://${INFLUX_IP}:${INFLUX_PORT}"]
  database = "postgres"
  username = "${INFLUX_WRITE_USERNAME}"
  password = "${INFLUX_WRITE_PASSWORD}"
  [outputs.influxdb.tagpass]
    influx_database_output = ["postgres"]
[[inputs.postgresql]]
  address = "host=192.168.100.160 user=${POSTGRES_READ_USERNAME} password=${POSTGRES_READ_PASSWORD} dbname=public sslmode=disable"
  [inputs.postgresql.tags]
    influx_database_output = "postgres"



[[outputs.influxdb]]
  urls = ["http://${INFLUX_IP}:${INFLUX_PORT}"]
  database = "systemStatus"
  username = "${INFLUX_WRITE_USERNAME}"
  password = "${INFLUX_WRITE_PASSWORD}"
  [outputs.influxdb.tagpass]
    influx_database_output = ["systemStatus"]

#SYSTEM STATISTICS
[[inputs.cpu]]
  percpu = false
  totalcpu = true
  collect_cpu_time = false
  report_active = false
  [inputs.cpu.tags]
    influx_database_output = "systemStatus"
[[inputs.disk]]
  # -v /:/hostfs:ro 
  # -e HOST_MOUNT_PREFIX=/hostfs 
  # -e HOST_PROC=/hostfs/proc
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]
  [inputs.disk.tags]
    influx_database_output = "systemStatus"
[[inputs.diskio]]
  [inputs.diskio.tags]
    influx_database_output = "systemStatus"
  # --privileged 
  # -v /:/hostfs:ro 
  # -v /run/udev:/run/udev:ro 
  # -e HOST_PROC=/hostfs/proc
[[inputs.kernel]]
  [inputs.kernel.tags]
    influx_database_output = "systemStatus"
[[inputs.mem]]
  [inputs.mem.tags]
    influx_database_output = "systemStatus"
[[inputs.processes]]
  [inputs.processes.tags]
    influx_database_output = "systemStatus"
[[inputs.swap]]
  [inputs.swap.tags]
    influx_database_output = "systemStatus"
[[inputs.system]]
  [inputs.system.tags]
    influx_database_output = "systemStatus"